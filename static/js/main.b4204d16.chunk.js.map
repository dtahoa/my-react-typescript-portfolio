{"version":3,"sources":["languages/index.tsx","serviceWorker.js","components/Sidebar/styles.ts","components/Sidebar/Sidebar.tsx","components/Sidebar/index.ts","components/UserHeader/styles.ts","components/UserHeader/index.ts","components/UserHeader/UserHeader.tsx","components/MobileNav/styles.ts","components/MobileNav/index.ts","components/MobileNav/MobileNav.tsx","components/Layout/styles.ts","components/Layout/index.ts","components/Layout/Layout.tsx","styles.ts","pages/Me/styles.ts","pages/Me/index.ts","pages/Me/Me.tsx","pages/Projects/styles.ts","pages/Projects/index.ts","pages/Projects/Projects.tsx","pages/Work/styles.ts","pages/Work/index.ts","pages/Work/Work.tsx","pages/Education/styles.ts","pages/Education/index.ts","pages/Education/Education.tsx","pages/index.tsx","App.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","StyledSideNav","styled","SideNav","items","name","path","Sidebar","useLocation","isFixedNav","expanded","isChildOfHeader","aria-label","map","i","isActive","pathname","element","Link","to","key","HeaderContainer","div","isHome","Header","Image","img","ViewResumeLink","a","UserHeader","user","src","basics","picture","href","username","target","rel","label","region","yearsOfExperience","headline","blog","Container","Spacer","NavWrapper","NavLink","NavButton","Button","MobileNav","hasIconOnly","renderIcon","User32","iconDescription","tooltipPosition","Code32","Portfolio32","Education32","StyledContent","Content","Layout","props","children","SectionTitle","h3","Paragraph","p","Pill","span","blue","ProfileLink","li","Me","summary","skills","skill","profiles","profile","network","url","ProjectItem","white","ProjectTitle","h4","SkillContainer","Projects","projects","project","languages","libraries","item","j","WorkItem","WorkTitle","JobTitle","Work","work","position","company","start","year","end","EducationItem","Institution","Degree","Education","education","studyType","area","description","replace","Pages","console","log","exact","App","useAPI","getUser","useEffect","data","i18n","use","LanguageDetector","initReactI18next","init","resources","fallbackLng","debug","keySeparator","interpolation","escapeValue","combinedReducers","combineReducers","api","ApiReducer","middlewares","thunk","promiseMiddleware","Logger","store","applyMiddleware","createStore","createStoreWithMiddleware","ReactDOM","render","StrictMode","Provider","value","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b4204d16.chunk.js","sourcesContent":["import enUS from './messages.en-US.json';\n\nexport default {\n  'en-US': enUS\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import styled from 'styled-components'\nimport { SideNav } from 'carbon-components-react/lib/components/UIShell'\n\nexport const StyledSideNav = styled(SideNav)`\n  @media (max-width: 640px) {\n    display: none;\n  }\n`\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { SideNavItems, SideNavLink } from 'carbon-components-react/lib/components/UIShell';\n\nimport { StyledSideNav } from './styles';\n\nconst items = [\n  { name: 'Me', path: '/' },\n  { name: 'Projects', path: '/projects' },\n  { name: 'Work', path: '/work' },\n  { name: 'Education', path: '/education' },\n];\n\nconst Sidebar: React.FC<any> = () => {\n  const location = useLocation();\n\n  return (\n    <StyledSideNav isFixedNav expanded isChildOfHeader={false} aria-label=\"Side navigation\">\n      <SideNavItems>\n        {items.map(i => (\n          <SideNavLink\n            isActive={\n              location.pathname === '/' && i.path === '/' ? true : location.pathname === i.path\n            }\n            element={Link}\n            to={i.path}\n            key={i.name}\n          >\n            {i.name}\n          </SideNavLink>\n        ))}\n      </SideNavItems>\n    </StyledSideNav>\n  );\n};\n\nexport default Sidebar;\n","import Sidebar from \"./Sidebar\"\nexport default Sidebar\n","import styled from 'styled-components';\n\nexport const HeaderContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  @media (max-width: 640px) {\n    display: ${({ isHome }) => (!isHome ? 'none' : 'flex')};\n    flex-direction: column;\n  }\n`;\n\nexport const Header = styled.div`\n  display: flex;\n\n  @media (max-width: 640px) {\n    flex-direction: column;\n  }\n`;\n\nexport const Image = styled.img`\n  width: 200px;\n  margin-right: 1rem;\n  border-radius: 2px;\n`;\n\nexport const ViewResumeLink = styled.a`\n  display: flex;\n  text-decoration: none;\n  padding: 0.75rem 1.5rem;\n  font-weight: bold;\n  align-items: center;\n  margin-top: 1rem;\n  border: 2px solid #2ecc40;\n  background-color: rgba(46, 204, 64, 0.3);\n  transition: background-color 250ms ease;\n\n  &:hover {\n    background-color: #2ecc40;\n  }\n\n  svg {\n    fill: white;\n    margin-left: 8px;\n  }\n`;\n","import UserHeader from './UserHeader'\nexport default UserHeader\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { ArrowRight16 } from '@carbon/icons-react';\n\nimport { HeaderContainer, Header, Image, ViewResumeLink } from './styles';\n\nconst UserHeader = ({ user }) => {\n  const location = useLocation();\n\n  return (\n    <HeaderContainer isHome={location.pathname === '/'}>\n      <Header>\n        <Image src={user.basics.picture} />\n        <div>\n          <h2>{user.basics.name}</h2>\n          <h4>\n            <a\n              href={`https://gitconnected.com/${user.basics.username}`}\n              target=\"_blank\"\n              rel=\"noreferrer noopener\"\n            >\n              @{user.basics.username}\n            </a>\n          </h4>\n          <p>{user.basics.label}</p>\n          <p>Coding in {user.basics.region}</p>\n          <p>{user.basics.yearsOfExperience} years of experience as a developer</p>\n          <p>{user.basics.headline}</p>\n          <p>\n            Blog:{' '}\n            <a href={user.basics.blog} target=\"_blank\" rel=\"noreferrer noopener\">\n              {user.basics.blog}\n            </a>\n          </p>\n        </div>\n      </Header>\n      <div>\n        <ViewResumeLink\n          href={`https://gitconnected.com/${user.basics.username}/resume`}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <span>View Résumé</span>\n          <ArrowRight16 />\n        </ViewResumeLink>\n      </div>\n    </HeaderContainer>\n  );\n};\n\nexport default UserHeader;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport Button from 'carbon-components-react/lib/components/Button';\n\nexport const Container = styled.div`\n  display: none;\n\n  @media (max-width: 640px) {\n    display: block;\n  }\n`;\n\nexport const Spacer = styled.div`\n  height: 48px;\n`;\n\nexport const NavWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  position: fixed;\n  width: 100vw;\n  top: 0;\n  left: 0;\n  z-index: 1;\n`;\n\nexport const NavLink = styled(Link)`\n  width: 25%;\n`;\n\nexport const NavButton = styled(Button)`\n  width: 100%;\n  justify-content: center;\n`;\n","import MobileNav from './MobileNav'\nexport default MobileNav\n","import React from 'react'\nimport { User32, Code32, Portfolio32, Education32 } from '@carbon/icons-react'\n\nimport { Container, Spacer, NavWrapper, NavButton, NavLink } from './styles'\n\nconst MobileNav: React.FC<any> = () => {\n  return (\n    <Container>\n      <Spacer />\n      <NavWrapper>\n        <NavLink to=\"/\">\n          <NavButton\n            hasIconOnly\n            renderIcon={User32}\n            iconDescription=\"Me\"\n            tooltipPosition=\"bottom\"\n          />\n        </NavLink>\n        <NavLink to=\"/projects\">\n          <NavButton\n            hasIconOnly\n            renderIcon={Code32}\n            iconDescription=\"Projects\"\n            tooltipPosition=\"bottom\"\n          />\n        </NavLink>\n        <NavLink to=\"/work\">\n          <NavButton\n            hasIconOnly\n            renderIcon={Portfolio32}\n            iconDescription=\"Work\"\n            tooltipPosition=\"bottom\"\n          />\n        </NavLink>\n        <NavLink to=\"/education\">\n          <NavButton\n            hasIconOnly\n            renderIcon={Education32}\n            iconDescription=\"Education\"\n            tooltipPosition=\"bottom\"\n          />\n        </NavLink>\n      </NavWrapper>\n    </Container>\n  )\n}\n\nexport default MobileNav\n","import styled from 'styled-components'\nimport { Content } from 'carbon-components-react/lib/components/UIShell'\n\nexport const StyledContent = styled(Content)`\n  min-height: 100vh;\n\n  @media (max-width: 640px) {\n    margin-left: 0 !important;\n  }\n`\n","import Layout from './Layout'\nexport default Layout\n","import React from 'react';\nimport Sidebar from '../Sidebar';\nimport UserHeader from '../UserHeader';\nimport MobileNav from '../MobileNav';\n\nimport { StyledContent } from './styles';\n\nconst Layout: React.FC<{ user: any, children: any }> = (props) => {\n  return (\n    <>\n      <MobileNav />\n      <Sidebar />\n      <StyledContent>\n        <UserHeader user={props.user} />\n        <div>{props.children}</div>\n      </StyledContent>\n    </>\n  );\n};\n\nexport default Layout;\n\n\n","import styled from 'styled-components';\nimport { blue } from '@carbon/colors';\n\nexport const SectionTitle = styled.h3`\n  margin-top: 1.5rem;\n  margin-bottom: 0.5rem;\n`;\n\nexport const Paragraph = styled.p`\n  white-space: pre-wrap;\n`;\n\nexport const Pill = styled.span`\n  display: inline-block;\n  margin-right: 0.75rem;\n  margin-bottom: 0.75rem;\n  padding: 0.5rem 1rem;\n  background-color: ${blue[20]};\n  color: ${blue[70]};\n  border: 3px solid ${blue[70]};\n  border-radius: 2px;\n  font-weight: bold;\n`;\n","import styled from 'styled-components';\n\nexport const ProfileLink = styled.li`\n  margin-right: 0.5rem;\n  margin-bottom: 0.5rem;\n  display: inline-block;\n  font-size: 18px;\n`\n","import Me from './Me';\nexport default Me;\n","import React from 'react';\nimport Layout from '../../components/Layout';\nimport { SectionTitle, Paragraph, Pill } from '../../styles';\nimport { ProfileLink } from './styles';\n\nconst Me: React.FC<any> = ({ user }) => {\n  return (\n    <Layout user={user}>\n      <div>\n        <SectionTitle>About Me</SectionTitle>\n        <Paragraph>{user.basics.summary}</Paragraph>\n      </div>\n      <div>\n        <SectionTitle>Skills</SectionTitle>\n        <div>\n          {user.skills.map(skill => (\n            <Pill key={skill.name}>{skill.name}</Pill>\n          ))}\n        </div>\n      </div>\n      <div>\n        <SectionTitle>Profiles</SectionTitle>\n        <ul>\n          {user.basics.profiles.map((profile, i) => (\n            <ProfileLink key={profile.network}>\n              {i !== 0 && ' | '}\n              <a href={profile.url} target=\"_blank\" rel=\"noreferrer noopener\">\n                {profile.network}\n              </a>\n            </ProfileLink>\n          ))}\n        </ul>\n      </div>\n    </Layout>\n  );\n};\n\nexport default Me;\n","import styled from 'styled-components'\nimport { white } from '@carbon/colors'\n\nexport const ProjectItem = styled.li`\n  margin-top: 1rem;\n  padding-bottom: 1rem;\n  border-bottom: 1px solid ${white};\n`\n\nexport const ProjectTitle = styled.h4`\n  font-weight: bold;\n`\n\nexport const SkillContainer = styled.div`\n  margin-top: 1.2rem;\n`\n","import Projects from './Projects'\nexport default Projects\n","import React from 'react';\nimport Layout from '../../components/Layout';\nimport { SectionTitle, Pill } from '../../styles';\nimport { ProjectItem, ProjectTitle, SkillContainer } from './styles';\n\nconst Projects: React.FC<any> = ({ user }) => {\n  return (\n    <Layout user={user}>\n      <div>\n        <SectionTitle>Projects</SectionTitle>\n        <ul>\n          {user.projects.map((project, i) => (\n            <ProjectItem key={i}>\n              <ProjectTitle>{project.name}</ProjectTitle>\n              <p>{project.summary}</p>\n              <SkillContainer>\n                {[...project.languages, ...project.libraries].map((item, j) => (\n                  <Pill key={j}>{item}</Pill>\n                ))}\n              </SkillContainer>\n            </ProjectItem>\n          ))}\n        </ul>\n      </div>\n    </Layout>\n  );\n};\n\nexport default Projects;\n","import styled from 'styled-components';\nimport { white } from '@carbon/colors';\n\nexport const WorkItem = styled.li`\n  margin-top: 1rem;\n  padding-bottom: 1rem;\n  border-bottom: 1px solid ${white};\n`\n\nexport const WorkTitle = styled.h4`\n  font-weight: bold;\n`\n\nexport const JobTitle = styled.p`\n  font-weight: bold;\n  display: inline-block;\n`\n","import Work from './Work'\nexport default Work\n","import React from 'react';\nimport Layout from '../../components/Layout';\nimport { SectionTitle, Paragraph } from '../../styles';\nimport { WorkItem, WorkTitle, JobTitle } from './styles';\n\nconst Work: React.FC<any> = ({ user }) => {\n  return (\n    <Layout user={user}>\n      <div>\n        <SectionTitle>Work</SectionTitle>\n        <ul>\n          {user.work.map((work, i) => (\n            <WorkItem key={i}>\n              <WorkTitle>{work.position}</WorkTitle>\n              <div>\n                <JobTitle>{work.company}</JobTitle> <span>{work.location}</span>\n                <span> &sdot; </span>\n                <span>\n                  {work.start.year} to {work.end.year}\n                </span>\n              </div>\n              <Paragraph>{work.summary}</Paragraph>\n            </WorkItem>\n          ))}\n        </ul>\n      </div>\n    </Layout>\n  );\n};\n\nexport default Work;\n","import styled from 'styled-components'\nimport { white } from '@carbon/colors'\n\nexport const EducationItem = styled.li`\n  margin-top: 1rem;\n  padding-bottom: 1rem;\n  border-bottom: 1px solid ${white};\n`\n\nexport const Institution = styled.h4`\n  font-weight: bold;\n`\n\nexport const Degree = styled.p`\n  font-weight: bold;\n  display: inline-block;\n`\n","import Education from './Education'\nexport default Education\n","import React from 'react';\nimport Layout from '../../components/Layout';\nimport { SectionTitle, Paragraph } from '../../styles';\nimport { EducationItem, Institution, Degree } from './styles';\n\nconst Education: React.FC<any> = ({ user }) => {\n  return (\n    <Layout user={user}>\n      <div>\n        <SectionTitle>Education</SectionTitle>\n        <ul>\n          {user.education.map((education, i) => (\n            <EducationItem key={i}>\n              <Institution>{education.position}</Institution>\n              <div>\n                <Degree>\n                  {education.studyType}, {education.area}\n                </Degree>{' '}\n                <span> &sdot; </span>\n                <span>\n                  {education.start.year} to {education.end.year}\n                </span>\n              </div>\n              <Paragraph>{education.description.replace('\\n\\n', '\\n')}</Paragraph>\n            </EducationItem>\n          ))}\n        </ul>\n      </div>\n    </Layout>\n  );\n};\n\nexport default Education;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route, useLocation } from 'react-router-dom';\nimport Me from './Me';\nimport Projects from './Projects';\nimport Work from './Work';\nimport Education from './Education';\n\nconst Pages: React.FC<any> = ({ user }) => {\n  let location = useLocation();\n  console.log(location.pathname);\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <Me user={user} />\n        </Route>\n        <Route path=\"/projects\">\n          <Projects user={user} />\n        </Route>\n        <Route path=\"/work\">\n          <Work user={user} />\n        </Route>\n        <Route path=\"/education\">\n          <Education user={user} />\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\n\nexport default Pages;\n","import React, { useEffect } from 'react';\nimport Pages from './pages';\nimport { useAPI } from 'cinchy';\n\nfunction App() {\n  const [user, getUser] = useAPI('https://gitconnected.com/v1/portfolio/dtahoa2');\n\n  useEffect(() => {\n    if (!user.data) {\n      getUser();\n    }\n  }, []);\n\n  if (!user.data) {\n    return <div></div>\n  }\n\n  return <Pages user={user.data} />;\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport thunk from 'redux-thunk';\nimport promiseMiddleware from 'redux-promise';\nimport { createStore, applyMiddleware, combineReducers  } from 'redux';\nimport { StoreContext } from 'redux-react-hook';\nimport { ApiReducer } from 'cinchy';\n\nimport Logger from 'redux-logger';\nimport i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\nimport resources from './languages';\n\nimport './index.scss';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\n\ni18n.use(LanguageDetector).use(initReactI18next)\n.init({resources, fallbackLng: 'en-US', debug: true, \nkeySeparator: false, interpolation: { escapeValue: false }});\n\n\nconst combinedReducers = combineReducers({api: ApiReducer });\nconst middlewares = [thunk, promiseMiddleware, Logger];\nconst createStoreWithMiddleware = applyMiddleware(...middlewares)(createStore);\nconst store = createStoreWithMiddleware(combinedReducers);\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <StoreContext.Provider value={store}>\n      <App />\n    </StoreContext.Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}